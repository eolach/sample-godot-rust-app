name: CI

on: push

# on:
#   push:
#     paths:
#     - 'assets/**'
#     - 'scenes/**'
#     - 'src/**'
#     - 'project.godot'
#     - 'default_env.tres'
#     - 'Cargo.toml'
#     - 'export_presets.cfg'

jobs:
  rust-linux:
    runs-on: ubuntu-latest
    name: Building Rust source for Linux
    steps:
    - uses: actions/checkout@v2
    - name: Check Rust toolchain
      run: rustup show
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --release
    - name: Upload GDNative library as artifact
      uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: target/release/libcore.so

  rust-windows:
    runs-on: ubuntu-latest
    name: Building Rust source for Windows
    steps:
    - uses: actions/checkout@v2
    - name: Check Rust toolchain
      run: rustup show
    - name: Install Cross
      run: cargo install cross
    - name: Build custom Docker image for x86_64-pc-windows-gnu toolchain with LLVM
      run: docker build -t my/x86_64-pc-windows-gnu-llvm:latest -f ./x86_64-pc-windows-gnu-llvm.Dockerfile .
    - name: Build with Cross
      run: cross build --release --target x86_64-pc-windows-gnu
    - name: Run tests with Cross
      run: cross test --release --target x86_64-pc-windows-gnu
    - name: Check target directory
      run: ls target
    - name: Check target/x86_64-pc-windows-gnu directory
      if: always()
      run: ls target/x86_64-pc-windows-gnu
    - name: Check target/x86_64-pc-windows-gnu/release directory
      if: always()
      run: ls target/x86_64-pc-windows-gnu/release
    - name: Upload GDNative library as artifact
      uses: actions/upload-artifact@v1
      with:
        name: release-windows
        path: target/x86_64-pc-windows-gnu/release/core.dll

  godot:
    runs-on: ubuntu-latest
    needs: [rust-linux, rust-windows]
    name: Building Godot game for Linux/X11
    steps:
    - uses: actions/checkout@v2
    - name: Setup environment
      run: |
        sudo apt-get install tree
        wget https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_linux_headless.64.zip
        wget https://downloads.tuxfamily.org/godotengine/3.2.1/Godot_v3.2.1-stable_export_templates.tpz
        mkdir ~/.cache
        mkdir -p ~/.config/godot
        mkdir -p ~/.local/share/godot/templates/3.2.1.stable
        unzip Godot_v3.2.1-stable_linux_headless.64.zip
        sudo mv Godot_v3.2.1-stable_linux_headless.64 /usr/local/bin/godot
        unzip Godot_v3.2.1-stable_export_templates.tpz
        sudo mv templates/* ~/.local/share/godot/templates/3.2.1.stable
        sudo rm -f Godot_v3.2.1-stable_linux_headless.64.zip Godot_v3.2.1-stable_export_templates.tpz
        mkdir -p ./build/linux
    - name: Download GDNative library artifact
      uses: actions/download-artifact@v1
      with:
        name: release-linux
        path: target/release
    - name: Checking project structure for troubleshooting
      run: tree
    - name: Download GDNative library artifact
      uses: actions/download-artifact@v1
      with:
        name: release-windows
        path: target/release
    - name: Checking project structure for troubleshooting
      run: tree
    - name: Building for Linux/X11
      run: godot -v --export "Linux/X11" ./build/linux/sample_godot_rust_app.x86_64
    - name: Checking final build structure for troubleshooting
      run: tree ./build
    - name: Upload Linux game as artifact
      uses: actions/upload-artifact@v1
      with:
        name: sample_godot_rust_app.x86_64
        path: build/linux